{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TodoList = function TodoList() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    taskText = _useState4[0],\n    setTaskText = _useState4[1];\n  var addTask = function addTask() {\n    if (taskText.trim() !== '') {\n      setTasks(function (prevTasks) {\n        return [].concat(_toConsumableArray(prevTasks), [{\n          id: Date.now().toString(),\n          text: taskText\n        }]);\n      });\n      setTaskText('');\n    }\n  };\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsx(View, {\n      style: styles.taskItem,\n      children: _jsx(Text, {\n        children: item.text\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Add a task\",\n      value: taskText,\n      onChangeText: setTaskText\n    }), _jsx(TouchableOpacity, {\n      style: styles.addButton,\n      onPress: addTask,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Add Task\"\n      })\n    }), _jsx(FlatList, {\n      data: tasks,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: renderItem\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    padding: 10,\n    marginBottom: 10\n  },\n  addButton: {\n    backgroundColor: 'blue',\n    padding: 10,\n    alignItems: 'center',\n    borderRadius: 5\n  },\n  buttonText: {\n    color: 'white'\n  },\n  taskItem: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    padding: 10,\n    marginBottom: 10\n  }\n});\nexport default TodoList;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","FlatList","StyleSheet","jsx","_jsx","jsxs","_jsxs","TodoList","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","taskText","setTaskText","addTask","trim","prevTasks","concat","_toConsumableArray","id","Date","now","toString","text","renderItem","_ref","item","style","styles","taskItem","children","container","input","placeholder","value","onChangeText","addButton","onPress","buttonText","data","keyExtractor","create","flex","padding","borderWidth","borderColor","marginBottom","backgroundColor","alignItems","borderRadius","color"],"sources":["D:/perosonelle/info3/p2/TP_ReactNative/TP3/TodoListApp/components/TodoList.js"],"sourcesContent":["/**\r\n    * @description      : \r\n    * @author           : belgacem\r\n    * @group            : \r\n    * @created          : 18/12/2023 - 23:10:30\r\n    * \r\n    * MODIFICATION LOG\r\n    * - Version         : 1.0.0\r\n    * - Date            : 18/12/2023\r\n    * - Author          : belgacem\r\n    * - Modification    : \r\n**/\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\n\r\nconst TodoList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskText, setTaskText] = useState('');\r\n\r\n  const addTask = () => {\r\n    if (taskText.trim() !== '') {\r\n      setTasks((prevTasks) => [...prevTasks, { id: Date.now().toString(), text: taskText }]);\r\n      setTaskText('');\r\n    }\r\n  };\r\n\r\n  const renderItem = ({ item }) => (\r\n    <View style={styles.taskItem}>\r\n      <Text>{item.text}</Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Add a task\"\r\n        value={taskText}\r\n        onChangeText={setTaskText}\r\n      />\r\n      <TouchableOpacity style={styles.addButton} onPress={addTask}>\r\n        <Text style={styles.buttonText}>Add Task</Text>\r\n      </TouchableOpacity>\r\n      <FlatList data={tasks} keyExtractor={(item) => item.id} renderItem={renderItem} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: 'gray',\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  },\r\n  addButton: {\r\n    backgroundColor: 'blue',\r\n    padding: 10,\r\n    alignItems: 'center',\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n  },\r\n  taskItem: {\r\n    borderWidth: 1,\r\n    borderColor: 'gray',\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default TodoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}